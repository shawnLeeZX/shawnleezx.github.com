<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown | SHAWN LEE]]></title>
  <link href="http://shawnLeeZX.github.io/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://shawnLeeZX.github.io/"/>
  <updated>2015-12-11T16:19:42+08:00</updated>
  <id>http://shawnLeeZX.github.io/</id>
  <author>
    <name><![CDATA[Shawn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writing Markdown With Auto-complete and Math Equation in Emacs]]></title>
    <link href="http://shawnLeeZX.github.io/blog/2014/09/24/writing-markdown-with-autocomplete-and-math-equation-in-emacs/"/>
    <updated>2014-09-24T16:52:00+08:00</updated>
    <id>http://shawnLeeZX.github.io/blog/2014/09/24/writing-markdown-with-autocomplete-and-math-equation-in-emacs</id>
    <content type="html"><![CDATA[<p>This post talks about writing markdown under Emacs. Besides the normal,
it mainly talks about how to use auto-complete, <code>ispell-complete-word</code>
after enabling <code>flyspell-mode</code>, and integrate <code>LaTeX-mode</code> with
<code>markdown-mode</code> to ease the writing of math equations.</p>

<!-- more -->

<p>I guess nobody who is using Emacs won’t blogging.  People has spent a
lot of time implementing a major mode for markdown in emacs, as for as
I can see on its
<a href="http://jblevins.org/projects/markdown-mode/">homepage</a>.</p>

<p>Installation of <code>markdown-mode</code> is omitted.</p>

<p>However, auto-complete malfunctions from time to time where tab in the
major mode auto-complete works with does something. In my case, each
time I press tab in markdown mode, the cursor goes back to the start
of the line and it is really annoying. This time I spent time to fix
this once and for all.</p>

<p>The mechanism that how tab works in Emacs is a bit complex. I will not
describe it here since it would be too long and I have not figure it
out completely yet. By analyzing the Emacs configuration forked from
Purcell, I found an utility function written by him(I have refactored
his code a lot so do not expect to find exact matches in exact places).</p>

<p><code>cl
;; Turn off indentation binded with tab.
;; ===============
;; Function to indent the current line.  This function will be called
;; with no arguments.  If it is called somewhere where
;; auto-indentation cannot be done (e.g. inside a string), the
;; function should simply return `noindent'.  Setting this function is
;; all you need to make TAB indent appropriately.  Don't rebind TAB
;; unless you really need to.
;;
;; The function defined here use anomynous function to return the
;; 'noindent to disable the indentation functionality of tab.
(defun sanityinc/never-indent ()
  (set (make-local-variable 'indent-line-function) (lambda () 'noindent)))
</code></p>

<p>The indentation function of tab is determined by the function
<code>indent-line-function</code> on the fly. By returning <code>'noindent</code>, we tell
Emacs does not indent when tab being pressed. See the following:</p>

<p><code>cl
;; Fix tab for autocompletion.
(add-hook 'markdown-mode-hook 'sanityinc/never-indent)
</code></p>

<h3 id="use-ispells-word-completion-instead-of-flyspells">Use ispell’s word completion instead of flyspell’s</h3>
<p>I use flyspell to check the spelling of my markdown files on the fly,
however, when using flyspell, the word correction mapping <code>C-M-i</code> of
<code>ispell</code> minor mode is overshadowed by with the
<code>flyspell-correct-word</code> command. In my preference, it is less powerful
than the original command <code>ispell-complete-word</code>, thus I want it
back.</p>

<p>To fix this, a bit of hacking should be used, since the minor mode
keymap(Google for what keymap means in Emacs) is the inner most keymap
used by Emacs, which means it will be applied first. The way to
override minor mode keymap is to add overriding function to the hook
of this minor mode.</p>

<p>One more problem is that there is not way that we could query the
keymap’s name of the current minor mode. This is where the hacking
coming out. We guess its name. Fortunately, flyspell mode’s keymap name
follows the convention of kepmap naming – it is just called
flyspell-mode-map. See the following:</p>

<p><code>cl
(add-hook 'flyspell-mode-hook
          (lambda ()
            "Use ispell to corrent the word instead of flyspell's."
            (define-key flyspell-mode-map (kbd "C-M-i") 'ispell-complete-word)
          )
)
</code></p>

<p>Now, we have ispell’s binding back.</p>

<h3 id="tips-about-writing-math">Tips about writing math</h3>

<p>I currently use manual switch between <code>LaTeX-mode</code>(from <code>auxtex</code>
package) and <code>markdown-mode</code> to input math symbol. Did not figure out
how to combine those two modes yet. I would be grateful if you let me
know.</p>
]]></content>
  </entry>
  
</feed>
