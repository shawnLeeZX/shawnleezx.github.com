<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Djvu | SHAWN LEE]]></title>
  <link href="http://shawnLeeZX.github.io/blog/categories/djvu/atom.xml" rel="self"/>
  <link href="http://shawnLeeZX.github.io/"/>
  <updated>2015-07-02T15:16:14+08:00</updated>
  <id>http://shawnLeeZX.github.io/</id>
  <author>
    <name><![CDATA[Shawn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Convert Djvu File to PDF with Text Kept]]></title>
    <link href="http://shawnLeeZX.github.io/blog/2015/03/27/how-to-convert-djvu-file-to-pdf-with-text-kept/"/>
    <updated>2015-03-27T20:47:00+08:00</updated>
    <id>http://shawnLeeZX.github.io/blog/2015/03/27/how-to-convert-djvu-file-to-pdf-with-text-kept</id>
    <content type="html"><![CDATA[<p>Finally, I have come up with a solution to convert Djvu format e-book to Pdf
format. This post is going to note down exactly HOW.</p>

<p>First, some background about why I am doing this.</p>

<p>In the ancient time, well-know scholars are proud of their collection of books
in their personal library, which is the physical incarnation of their knowledge
and journey of learning. Although still a majority of people prefers the old
way of reading paper books, the way to keep one’s collection of books is going
to change to the electronic format way eventually. There are three significant
benefits of doing this:</p>

<ol>
  <li>You are able to bring with you all your books anywhere without any extra
effort.</li>
  <li>E-books are searchable, which speed up your reading a lot.</li>
  <li>You can open multiple copies of your book at the same time so the cross
reference is much more easier than reading paper version.</li>
</ol>

<p>But one major drawback of the past years where I almost read e-books
exclusively is that at the time when I can only find djvu format of certain
files, I have no way to highlight text on the e-book, especially for Math
books, a lot of which are in djvu format.</p>

<p>After meeting with one file that I must take note, I decide to figure out a
solution. So here it is.</p>

<!-- more -->

<p>Basically, the mechanism works like this. We extract image and text from the
original djvu files separately. Then we create the wanted pdf with them.</p>

<p>The solution is a combination of several open source tools:</p>

<ol>
  <li><a href="http://jwilk.net/software/ocrodjvu">djvu2hocr</a>. It is a wrapper for OCR
systems, that allows you to perform OCR on DjVu files. Optical character
recognition (OCR) is the mechanical or electronic conversion of images of
typewritten or printed text into machine-encoded text.</li>
  <li><a href="http://djvu.sourceforge.net/">ddjvu</a>. We use it to decode image from djvu
file. It is part of the open source project DjVuLibre that offers program to
manipulate djvu files. But one of the most pity is that no program it offers
could add highlight and annotations to djvu in a GUI way. I think this is
one of the major reasons djvu cannot catch on besides some other big
reasons.</li>
  <li><a href="https://rubygems.org/gems/pdfbeads">pdfbeads</a>. PDFBeads is a small utility
written in Ruby which takes scanned page images and converts them into a
single PDF file.</li>
  <li><a href="http://www.ghostscript.com/">gs</a> PostScript and PDF language interpreter
and previewer. If you are using a modern UNIX environment, it is highly
possible you would have it installed by default. We need this when deal with
djvu books, since pdfbeads creates very large intermediate files which makes
converting large books infeasible. So we need to create pdf pages one by one
and use gs to merge them.</li>
</ol>

<h2 id="installation">INSTALLATION</h2>

<p>Only installation on Ubuntu is going to be described.</p>

<h3 id="ocrodjvu">ocrodjvu</h3>

<p><code>djvu2hocr</code> and <code>ddjvu</code> are from <code>ocrodjvu</code>.</p>

<p>ocrodjvu is in the official repository, so just type in:</p>

<p><code>bash
sudo apt-get install ocrodjvu
</code></p>

<h3 id="pdfbeads">pdfbeads</h3>

<p><code>pdfbeads</code> is written in ruby. The package manager <code>gem</code> of ruby will handle
dependency in ruby but there are some addition library header needed to be
installed depending on your operating system. As for me, <code>libleptonica-dev</code> is
needed. Type in:</p>

<p><code>bash
sudo apt-get install libleptonica-dev
</code></p>

<blockquote>
  <p><a href="http://www.leptonica.com/">Leptonica</a> is a pedagogically-oriented open
source site containing software that is broadly useful for image processing
and image analysis applications.</p>
</blockquote>

<p>If you have not done a lot image manipulation, it is highly probable that you
also need to install <code>libmagickwand-dev</code>:</p>

<p><code>bash
sudo apt-get install libmagickwand-dev
</code></p>

<p>It mainly installs development package for ImageMagick. From its websites,
it is a:</p>

<blockquote>
  <p><a href="http://www.leptonica.com/">ImageMagick</a>® is a software suite to create,
edit, compose, or convert bitmap images. It can read and write images in a
variety of formats (over 200) including PNG, JPEG, JPEG-2000, GIF, TIFF, DPX,
EXR, WebP, Postscript, PDF, and SVG. Use ImageMagick to resize, flip, mirror,
rotate, distort, shear and transform images, adjust image colors, apply
various special effects, or draw text, lines, polygons, ellipses and Bézier
curves.</p>
</blockquote>

<p>And to ensure we are getting a reasonable size of pdf finally, we need to
use <a href="http://jbig2.com/">JBIG2</a> compression instead of TIFF G4 when creating
pdf. JBIG2 is an International Telecommunication Union format that represents a
revolutionary breakthrough in captured document technology. Using JBIG2
encoding, a scanned image can be compressed up to 10x smaller than with TIFF
G4.</p>

<p>This time we need to compile it from
<a href="https://github.com/agl/jbig2enc">source</a>. Standard pipe is good:</p>

<p><code>bash
./autogen.sh
./configure
make
make install (or sudo make install)
</code></p>

<p>I have done a simple test on how much more compress JBIG2 could offer. Using
TIFF G4, one random chosen page of my djvu file will be 77K, while it is 21K
using JBIG2. Considering that the final output size of my pdf file is 49M, it
would beyond 100M if I used TIFF G4, which is too big for a pdf book.</p>

<p>With all prerequisite ready, we could install pdfbeads now:</p>

<p><code>bash
sudo gem install pdfbeads
</code></p>

<h3 id="gs">gs</h3>

<p><code>gs</code> should be available already on Ubuntu.</p>

<h2 id="usage">Usage</h2>

<p>Basic usage for small file could be found on
<a href="http://askubuntu.com/questions/46233/converting-djvu-to-pdf">Converting DJVU to PDF</a>,
where I learned how to convert djvu file.</p>

<p>But if you want to convert something that is a book, converting it directly
using the method in the above link is going to crash your PC, at least freeze
it until you kill the process because pdfbeads is creating very huge
intermediate files. It exceeded 10G before I killed it in my case.</p>

<p>So to deal with the case, I write a script to process djvu file page by page
and merge all the pdf pages in the end. The script could be found on
<a href="https://github.com/shawnLeeZX/daily_tools/blob/master/djvu_2_pdf.sh">here</a>.</p>

<h2 id="remark-on-other-solution">Remark on Other Solution</h2>

<p>Before I dived in all those complicated tools, I tried to some easier
solutions, including online converter and <code>gscan2pdf</code>. They both does not
work. <code>gscan2pdf</code> is capable of converting djvu to pdf with text. But it may
have trouble handling hundreds of pages ones given the error report I got.</p>
]]></content>
  </entry>
  
</feed>
