<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octave | SHAWN LEE]]></title>
  <link href="http://shawnLeeZX.github.io/blog/categories/octave/atom.xml" rel="self"/>
  <link href="http://shawnLeeZX.github.io/"/>
  <updated>2016-01-09T11:17:56+08:00</updated>
  <id>http://shawnLeeZX.github.io/</id>
  <author>
    <name><![CDATA[Shawn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Plotting under Octave]]></title>
    <link href="http://shawnLeeZX.github.io/blog/2013/12/19/plotting-under-octave/"/>
    <updated>2013-12-19T00:20:00+08:00</updated>
    <id>http://shawnLeeZX.github.io/blog/2013/12/19/plotting-under-octave</id>
    <content type="html"><![CDATA[<p>I forgot how to plot in Octave again…</p>

<p>Just post my code here as a quick reminder in case of I forget it again in the
future…</p>

<!-- more -->

<p>```matlab
socket_number = [1 100 300 500];</p>

<p>figure;
% Plot the graph before any optimization.</p>

<p>original_mean       = [0.0686 18.4025 12.414 24.6195];
standard_deviation  = [0.0104951116 2.2512403014 2.6673215424 17.4024046962];</p>

<p>subplot(2, 2, 1);
plot(
  socket_number, original_mean,”;Mean Time;”,
  socket_number, standard_deviation, “;Standard Deviation;”
  );
title(“Original lwIP”)
xlim([1 500]);
ylim([-5 50]);
xlabel(“Number of Socket”);
ylabel(“Time/s”);</p>

<p>% Plot the graph after optimizing tcp_input.
tcp_input_mean                = [0.0706 15.138 10.2905 15.825];
tcp_input_standard_deviation  = [0.0097947354 3.6082006013 2.7412703068 12.4089184821];
tcp_input_improvement_ratio   = [-2.915451895 17.7394375764 17.1056871274 35.721684031];</p>

<p>subplot(2, 2, 2);
plot(
  socket_number, tcp_input_mean,”;Mean Time;”,
  socket_number, tcp_input_standard_deviation, “;Standard Deviation;”,
  socket_number, tcp_input_improvement_ratio, “;Improvement Ratio;”
  );
title(“Optimized tcp input”)
xlim([1 500]);
ylim([-5 50]);
xlabel(“Number of Socket”);
ylabel(“Time/s”);</p>

<p>% Plot the graph after optimizing checksum.</p>

<p>% Plot the graph after all the optimization.
checksum_mean                = [0.07205 12.774 8.769 9.6255];
checksum_standard_deviation  = [0.0127917531 4.0195749972 2.1146130665 6.3805671048];
checksum_improvement_ratio   = [-5.029154519 30.585518272 29.3620106332 60.9029427893];</p>

<p>subplot(2, 2, 3);
plot(
  socket_number, checksum_mean,”;Mean Time;”,
  socket_number, checksum_standard_deviation, “;Standard Deviation;”,
  socket_number, checksum_improvement_ratio, “;Improvement Ratio;”
  );
title(“Optimized tcp input and checksum”)
xlim([1 500]);
ylim([-5 50]);
xlabel(“Number of Socket”);
ylabel(“Time/s”);</p>

<p>% Print the final image.
print(“toy_scenario_result.jpg”, “-djpg”);
```</p>

<p>The result:</p>

<p>{% img /images/toy_scenario_result.jpg “Result” “Result” %}</p>
]]></content>
  </entry>
  
</feed>
